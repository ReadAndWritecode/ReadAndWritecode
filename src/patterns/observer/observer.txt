 Паттерн Observer(Наблюдатель)

 Что такое паттерн Observer?

 Паттерн Observer - это паттерн проектирования, который позволяет организовать взаимодействие между объектами таким образом,
 что при изменении состояния одного объекта все зависимые от него объекты автоматически уведомляются и обновляются.

 Это позволяет строить слабосвязанные и гибкие системы, где изменения в одной части системы могут воздействовать на другие части.

 --------------------------------------------------------

Когда использовать паттерн Observer?

Когда одно действие объекта должно приводить к изменениям в других объектах:
Если изменение в одном объекте влечет за собой изменение в других, паттерн Observer помогает автоматизировать этот процесс.

Когда необходима слабая связь между объектами:
Observer позволяет избежать жестких зависимостей между объектами и обеспечить более гибкую структуру системы.

Когда объект должен оповещать множество других объектов о своем состоянии:
Если несколько объектов должны реагировать на изменения в одном объекте, паттерн Observer предоставляет механизм для рассылки уведомлений.

----------------------------------------------------------------

Примеры использования паттерна Observer могут включать:

Графические интерфейсы:
Обновление элементов интерфейса (например, виджетов) при изменении данных.

Финансовые системы:
Обновление отчетов и графиков при изменении данных о ценах акций.

Сетевые приложения:
Обновление данных на клиентской стороне при изменении данных на сервере.

Подписка на события:
Подписка пользователей на уведомления о новых событиях, таких как публикации новых статей или видео.

--------------------------------------------------------------------

Давайте посмотрим на диаграмму классов для паттерна Observer. Основные участники - Subject (издатель) и Observer (подписчик)

Издатель содержит список подписчиков и методы для добавления, удаления и уведомления их.
Подписчики, в свою очередь, реализуют метод sendNotification(), который вызывается для получения уведомления.
