Шаблон проектирования "Декоратор" (Decorator / Wrapper)

Относится к категории структурных паттернов и используется для динамического добавления новых функциональных возможностей объекту
без изменения его структуры.

Декоратор позволяет создавать гибкие и расширяемые объекты путем оборачивания их в декораторы,
которые могут добавлять новую функциональность во время выполнения программы.

-------------------------------------------------------------------------------------

Основные компоненты шаблона "Декоратор":

  1) Компонент (Component):
  Это абстрактный класс или интерфейс, который определяет базовые операции, которые будут доступны для всех конкретных компонентов.

  2) Конкретный компонент (Concrete Component):
  Это класс, который реализует интерфейс компонента и предоставляет базовую функциональность.

  3) Декоратор (Decorator):
  Это абстрактный класс, который также реализует интерфейс компонента и содержит ссылку на объект компонента.
  Декоратор добавляет новую функциональность, делегируя базовые операции компоненту.

  4) Конкретный декоратор (Concrete Decorator):
  Это класс, который расширяет функциональность объекта компонента, добавляя свою собственную функциональность.

  ------------------------------------------------------------------------------------------

В этом примере шаблон "Декоратор" используется для добавления молока и сахара к простому кофе, не изменяя структуру класса SimpleCoffee.
Декораторы MilkDecorator и SugarDecorator расширяют функциональность базового компонента Coffee, добавляя новые опции и обогащая его.
Это позволяет легко добавлять новые "декораторы" для создания разнообразных комбинаций кофе с дополнительными опциями.